{"ast":null,"code":"var _jsxFileName = \"/home/lounis/Bureau/react/react_crud-app/react_crud/src/components/coursList.js\";\nimport React from 'react';\n\nclass CoursList extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      isEdit: false\n    };\n\n    this.renderlist = () => {\n      return React.createElement(\"li\", {\n        key: this.props.details.index,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 11\n        },\n        __self: this\n      }, this.props.details.nom, React.createElement(\"button\", {\n        onClick: () => this.toggleState(),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 14\n        },\n        __self: this\n      }, \"Edit\"), React.createElement(\"button\", {\n        onClick: () => this.props.deleteCourse(this.props.index),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 15\n        },\n        __self: this\n      }, \"Delete\"));\n    };\n\n    this.updateformCours = () => {\n      return React.createElement(\"form\", {\n        onSubmit: this.submitupdatename,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 22\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        type: \"text\",\n        defaultValue: this.props.details.nom,\n        ref: v => {\n          this.input = v;\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 23\n        },\n        __self: this\n      }), React.createElement(\"button\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 24\n        },\n        __self: this\n      }, \"update\"));\n    };\n\n    this.toggleState = () => {\n      let isEdit = this.state.isEdit;\n      this.setState({\n        isEdit: !isEdit\n      });\n    };\n\n    this.submitupdatename = e => {\n      e.preventDefault();\n      this.props.editCours(this.props.index, this.input.value);\n      this.toggleState();\n    };\n  }\n\n  render() //on utilise le fragment pour eviter la repetition de div et on recuperer la table detals envoyé par App state\n  {\n    let isEdit = this.state.isEdit;\n    return React.createElement(React.Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    }, isEdit ? this.updateformCours() : this.renderlist());\n  }\n\n}\n\nexport default CoursList;","map":{"version":3,"sources":["/home/lounis/Bureau/react/react_crud-app/react_crud/src/components/coursList.js"],"names":["React","CoursList","Component","state","isEdit","renderlist","props","details","index","nom","toggleState","deleteCourse","updateformCours","submitupdatename","v","input","setState","e","preventDefault","editCours","value","render"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;;AAEA,MAAMC,SAAN,SAAwBD,KAAK,CAACE,SAA9B,CAAuC;AAAA;AAAA;AAAA,SAErCC,KAFqC,GAE/B;AACJC,MAAAA,MAAM,EAAE;AADJ,KAF+B;;AAAA,SAMrCC,UANqC,GAM1B,MAAI;AACb,aACE;AAAI,QAAA,GAAG,EAAE,KAAKC,KAAL,CAAWC,OAAX,CAAmBC,KAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACO,KAAKF,KAAL,CAAWC,OAAX,CAAmBE,GAD1B,EAGM;AAAQ,QAAA,OAAO,EAAE,MAAI,KAAKC,WAAL,EAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAHN,EAIM;AAAQ,QAAA,OAAO,EAAE,MAAI,KAAKJ,KAAL,CAAWK,YAAX,CAAwB,KAAKL,KAAL,CAAWE,KAAnC,CAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAJN,CADF;AAQD,KAfoC;;AAAA,SAiBpCI,eAjBoC,GAiBpB,MAAI;AACnB,aACE;AAAM,QAAA,QAAQ,EAAE,KAAKC,gBAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAO,QAAA,IAAI,EAAC,MAAZ;AAAmB,QAAA,YAAY,EAAE,KAAKP,KAAL,CAAWC,OAAX,CAAmBE,GAApD;AAAyD,QAAA,GAAG,EAAKK,CAAD,IAAK;AAAC,eAAKC,KAAL,GAAWD,CAAX;AAAa,SAAnF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFF,CADF;AAMD,KAxBoC;;AAAA,SAyBrCJ,WAzBqC,GAyBzB,MAAI;AAAA,UACTN,MADS,GACD,KAAKD,KADJ,CACTC,MADS;AAEd,WAAKY,QAAL,CAAc;AACZZ,QAAAA,MAAM,EAAE,CAACA;AADG,OAAd;AAID,KA/BoC;;AAAA,SAgCrCS,gBAhCqC,GAgCnBI,CAAD,IAAK;AACpBA,MAAAA,CAAC,CAACC,cAAF;AAEA,WAAKZ,KAAL,CAAWa,SAAX,CAAqB,KAAKb,KAAL,CAAWE,KAAhC,EAAuC,KAAKO,KAAL,CAAWK,KAAlD;AACA,WAAKV,WAAL;AACD,KArCoC;AAAA;;AAuCrCW,EAAAA,MAAM,GACR;AACE;AAAA,QACOjB,MADP,GACe,KAAKD,KADpB,CACOC,MADP;AAEE,WACA,oBAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAGUA,MAAM,GAAC,KAAKQ,eAAL,EAAD,GAAyB,KAAKP,UAAL,EAHzC,CADA;AAOC;;AAlDkC;;AAqDvC,eAAeJ,SAAf","sourcesContent":["import React from 'react';\n\nclass CoursList extends React.Component{\n  //state pour controler l affichage\n  state={\n    isEdit: false\n  }\n  //state isedit est false => fonction\n  renderlist=()=>{\n    return(\n      <li key={this.props.details.index}>\n            {this.props.details.nom}\n            {/* bouton pour inverser la valeur state booleen et l affiche renderlist ou updatesubmitform*/}\n            <button onClick={()=>this.toggleState()}>Edit</button>\n            <button onClick={()=>this.props.deleteCourse(this.props.index)}>Delete</button>\n            </li>\n    )\n  }\n   //state isedit est true => fonction\n   updateformCours=()=>{\n    return(\n      <form onSubmit={this.submitupdatename} >\n        <input type=\"text\" defaultValue={this.props.details.nom} ref = {(v)=>{this.input=v}}/>\n        <button>update</button>\n      </form>\n    )\n  }\n  toggleState=()=>{\n    let {isEdit}=this.state;\n    this.setState({\n      isEdit: !isEdit\n    })\n   \n  }\n  submitupdatename=(e)=>{\n    e.preventDefault();\n  \n    this.props.editCours(this.props.index, this.input.value);\n    this.toggleState();\n  }\n \n  render()\n//on utilise le fragment pour eviter la repetition de div et on recuperer la table detals envoyé par App state\n  { \n    let {isEdit}=this.state;\n    return (\n    <React.Fragment>   \n            \n           \n             {isEdit?this.updateformCours(): this.renderlist()} \n            \n    </React.Fragment>\n  );}\n}\n\nexport default CoursList;"]},"metadata":{},"sourceType":"module"}