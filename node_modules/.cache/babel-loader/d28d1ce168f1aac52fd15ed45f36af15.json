{"ast":null,"code":"var _jsxFileName = \"/home/lounis/Bureau/react/react_crud-app/react_crud/src/components/coursList.js\";\nimport React from 'react';\n\nclass CoursList extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      isEdit: false\n    };\n\n    this.renderlist = () => {\n      return React.createElement(\"li\", {\n        key: this.props.details.index,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 10\n        },\n        __self: this\n      }, this.props.details.nom, React.createElement(\"button\", {\n        onClick: () => this.toggleState(),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 13\n        },\n        __self: this\n      }, \"Edit\"), React.createElement(\"button\", {\n        onClick: () => this.props.deleteCourse(this.props.index),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 14\n        },\n        __self: this\n      }, \"Delete\"));\n    };\n\n    this.toggleState = () => {\n      let isEdit = this.state.isEdit;\n      this.setState({\n        isEdit: !isEdit\n      });\n      console.log(this.state.isEdit);\n    };\n\n    this.editCours = () => {\n      return React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 28\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        type: \"text\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 29\n        },\n        __self: this\n      }), React.createElement(\"button\", {\n        onClick: () => this.toggleState(),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 30\n        },\n        __self: this\n      }, \"update\"));\n    };\n  }\n\n  render() //on utilise le fragment pour eviter la repetition de div et on recuperer la table detals envoyé par App state\n  {\n    return React.createElement(React.Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37\n      },\n      __self: this\n    }, this.state.isEdit ? this.editCours() : this.renderlist());\n  }\n\n}\n\nexport default CoursList;","map":{"version":3,"sources":["/home/lounis/Bureau/react/react_crud-app/react_crud/src/components/coursList.js"],"names":["React","CoursList","Component","state","isEdit","renderlist","props","details","index","nom","toggleState","deleteCourse","setState","console","log","editCours","render"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;;AAEA,MAAMC,SAAN,SAAwBD,KAAK,CAACE,SAA9B,CAAuC;AAAA;AAAA;AAAA,SAErCC,KAFqC,GAE/B;AACJC,MAAAA,MAAM,EAAE;AADJ,KAF+B;;AAAA,SAKrCC,UALqC,GAK1B,MAAI;AACb,aACE;AAAI,QAAA,GAAG,EAAE,KAAKC,KAAL,CAAWC,OAAX,CAAmBC,KAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACO,KAAKF,KAAL,CAAWC,OAAX,CAAmBE,GAD1B,EAGM;AAAQ,QAAA,OAAO,EAAE,MAAI,KAAKC,WAAL,EAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAHN,EAIM;AAAQ,QAAA,OAAO,EAAE,MAAI,KAAKJ,KAAL,CAAWK,YAAX,CAAwB,KAAKL,KAAL,CAAWE,KAAnC,CAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAJN,CADF;AAQD,KAdoC;;AAAA,SAerCE,WAfqC,GAezB,MAAI;AAAA,UACTN,MADS,GACD,KAAKD,KADJ,CACTC,MADS;AAEd,WAAKQ,QAAL,CAAc;AACZR,QAAAA,MAAM,EAAE,CAACA;AADG,OAAd;AAGAS,MAAAA,OAAO,CAACC,GAAR,CAAY,KAAKX,KAAL,CAAWC,MAAvB;AACD,KArBoC;;AAAA,SAuBrCW,SAvBqC,GAuB3B,MAAI;AACZ,aACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAO,QAAA,IAAI,EAAC,MAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,EAEE;AAAQ,QAAA,OAAO,EAAE,MAAI,KAAKL,WAAL,EAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFF,CADF;AAMD,KA9BoC;AAAA;;AA+BrCM,EAAAA,MAAM,GACR;AACE;AAAG,WACD,oBAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAGU,KAAKb,KAAL,CAAWC,MAAX,GAAkB,KAAKW,SAAL,EAAlB,GAAoC,KAAKV,UAAL,EAH9C,CADC;AAOA;;AAxCkC;;AA2CvC,eAAeJ,SAAf","sourcesContent":["import React from 'react';\n\nclass CoursList extends React.Component{\n  //state pour controler l affichage\n  state={\n    isEdit: false\n  }\n  renderlist=()=>{\n    return(\n      <li key={this.props.details.index}>\n            {this.props.details.nom}\n            {/* on ajoute un bouton pout editer les cours onclick*/}\n            <button onClick={()=>this.toggleState()}>Edit</button>\n            <button onClick={()=>this.props.deleteCourse(this.props.index)}>Delete</button>\n            </li>\n    )\n  }\n  toggleState=()=>{\n    let {isEdit}=this.state;\n    this.setState({\n      isEdit: !isEdit\n    })\n    console.log(this.state.isEdit)\n  }\n  //state isedit appelle cette fonction en true\n  editCours=()=>{\n    return(\n      <span>\n        <input type=\"text\" />\n        <button onClick={()=>this.toggleState()}>update</button>\n      </span>\n    )\n  }\n  render()\n//on utilise le fragment pour eviter la repetition de div et on recuperer la table detals envoyé par App state\n  {  return (\n    <React.Fragment>   \n            \n           \n             {this.state.isEdit?this.editCours(): this.renderlist()} \n            \n    </React.Fragment>\n  );}\n}\n\nexport default CoursList;"]},"metadata":{},"sourceType":"module"}